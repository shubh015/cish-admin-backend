# local db Configuration
#  spring.datasource.url=jdbc:postgresql://localhost:5432/cish
#  spring.datasource.username=postgres
#  spring.datasource.password=postgres
#  spring.datasource.driver-class-name=org.postgresql.Driver



# server db Configuration
 spring.datasource.url=jdbc:postgresql://nfp-portal-db.cbw2686ysv6d.ap-south-1.rds.amazonaws.com:5432/cish_admin_db
 spring.datasource.username=shubhamdb
 spring.datasource.password=your_actual_password
 spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# IMPORTANT: Different port from your first project
server.port=8081




# ===============================
# = JPA / Hibernate
# ===============================
spring.jpa.database=postgresql
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# # DDL mode: validate | update | create | create-drop | none
# spring.jpa.hibernate.ddl-auto=none
# # Show SQL (disable in production)
# spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true

# ===============================
# = Logging
# ===============================
logging.level.org.springframework=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# ===============================
# = Flyway (recommended for schema migrations)
# ===============================

spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.baseline-version=1

spring.flyway.enabled=true


# JWT
app.security.jwt.secret=yP3k1vO5a2qN8rT0b1LzE6cVxR4wQ9nF7gHjK0mB2sU=
app.security.jwt.expiration-ms=900000    
app.security.jwt.refresh-expiration-ms=604800000  
app.url.frontend.reset-password=https://app.example.com/reset-password?token=




spring.docker.compose.enabled=false

# MinIO config
# minio.url=${MINIO_URL:http://localhost:9000}
# minio.access.key=${MINIO_ACCESS_KEY:minioadmin}
# minio.secret.key=${MINIO_SECRET_KEY:minioadmin}
# minio.bucket.name=${MINIO_BUCKET:my-bucket}
# minio.secure=${MINIO_SECURE:false}


minio.url=http://127.0.0.1:9000
minio.access.key=minioadmin
minio.secret.key=minioadmin
# minio.bucket.name=my-bucket
minio.secure=false



# === MinIO Configuration for EC2 ===

minio.bucket.name=nfp-bucket


spring.session.store-type=none


